# Generated by Django 5.0.6 on 2024-11-05 21:01

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("adjfeedback", "0016_question_and_more"),
    ]

    operations = [
        migrations.RenameModel(
            old_name="StringAnswer",
            new_name="Answer",
        ),
        migrations.RunSQL(
            "INSERT INTO adjfeedback_answer (content_type_id, object_id, question_id, answer) SELECT content_type_id, object_id, question_id, CASE answer WHEN 't' THEN 'True' WHEN 'f' THEN 'False' ELSE 'None' END AS answer FROM adjfeedback_booleananswer;",
            "INSERT INTO adjfeedback_booleananswer (content_type_id, object_id, question_id, answer) SELECT a.content_type_id, a.object_id, a.question_id, CASE a.answer WHEN 'True' THEN 't' WHEN 'False' THEN 'f' ELSE NULL END AS answer FROM adjfeedback_answer a INNER JOIN adjfeedback_question q ON a.question_id=q.id WHERE q.answer_type IN ('bc', 'bs');",
        ),
        migrations.RunSQL(
            "INSERT INTO adjfeedback_answer (content_type_id, object_id, question_id, answer) SELECT content_type_id, object_id, question_id, answer::text AS answer FROM adjfeedback_integeranswer;",
            "INSERT INTO adjfeedback_integeranswer (content_type_id, object_id, question_id, answer) SELECT a.content_type_id, a.object_id, a.question_id, a.answer::int FROM adjfeedback_answer a INNER JOIN adjfeedback_question q ON a.question_id=q.id WHERE q.answer_type IN ('i', 'is');",
        ),
        migrations.RunSQL(
            "INSERT INTO adjfeedback_answer (content_type_id, object_id, question_id, answer) SELECT content_type_id, object_id, question_id, answer::text AS answer FROM adjfeedback_floatanswer;",
            "INSERT INTO adjfeedback_floatanswer (content_type_id, object_id, question_id, answer) SELECT a.content_type_id, a.object_id, a.question_id, a.answer::float FROM adjfeedback_answer a INNER JOIN adjfeedback_question q ON a.question_id=q.id WHERE q.answer_type='f';",
        ),
        migrations.RunSQL(
            "INSERT INTO adjfeedback_answer (content_type_id, object_id, question_id, answer) SELECT content_type_id, object_id, question_id, array_to_json(answer) AS answer FROM adjfeedback_manyanswer;",
            "INSERT INTO adjfeedback_manyanswer (content_type_id, object_id, question_id, answer) SELECT a.content_type_id, a.object_id, a.question_id, array_agg(vals) FROM adjfeedback_answer a INNER JOIN adjfeedback_question q ON a.question_id=q.id CROSS JOIN json_array_elements(a.answer) val(vals) WHERE q.answer_type='ms' GROUP BY a.id;",
        ),
        migrations.DeleteModel(
            name="BooleanAnswer",
        ),
        migrations.DeleteModel(
            name="FloatAnswer",
        ),
        migrations.DeleteModel(
            name="IntegerAnswer",
        ),
        migrations.DeleteModel(
            name="ManyAnswer",
        ),
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.AlterModelTable(
                    name='question',
                    table='registration_question',
                ),
                migrations.AlterModelTable(
                    name='answer',
                    table='registration_answer',
                ),
            ],
            state_operations=[
                migrations.RemoveField(
                    model_name="answer",
                    name="question",
                ),
                migrations.RemoveField(
                    model_name="answer",
                    name="content_type",
                ),
                migrations.RemoveField(
                    model_name="question",
                    name="for_content_type",
                ),
                migrations.RemoveField(
                    model_name="question",
                    name="tournament",
                ),
                migrations.DeleteModel(
                    name="Question",
                ),
                migrations.DeleteModel(
                    name="answer",
                ),
            ],
        ),
    ]
